[tool.poetry]
name = "objectprocessor"
version = "0.1.0"
description = ""
authors = ["Gregory M. Kapfhammer <gkapfham@allegheny.edu>"]

[tool.poetry.scripts]
objectprocessor = "objectprocessor.main:cli"

[tool.poetry.dependencies]
python = "^3.9"
rich = "^13.9.3"
typer = "^0.12.5"
mypy = "^1.13.0"
ruff = "^0.7.1"
taskipy = "^1.14.0"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pymarkdownlnt = "^0.9.24"

[tool.taskipy.tasks]
ruff = { cmd = "ruff check --preview --output-format=concise", help = "Run the ruff checks for source code format and linting" }
fix = { cmd = "ruff check --fix", help = "Fix the fixable ruff errors in source code format" }
ruffdetails = { cmd = "ruff check --preview", help = "Run the ruff checks for source code format and linting" }
coverage = { cmd = "poetry run pytest -s --cov-report term-missing --cov=palindromechecker", help = "Run coverage monitoring on test suite" }
markdownlint = { cmd = "poetry run pymarkdown --config .pymarkdown.cfg scan ../writing/reflection.md ../README.md", help = "Run the markdown linter on writing" }
mypy = { cmd = "poetry run mypy objectprocessor", help = "Run the mypy type checker for potential type errors" }
test = { cmd = "pytest -x -s", help = "Run the pytest test suite" }
test-silent = { cmd = "pytest -x --show-capture=no", help = "Run the pytest test suite without showing output" }
all = "task ruff && task markdownlint && task mypy && task test"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
